<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="6" ignored="2" total="24" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="154" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="154" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
      <class name="FirstClassTest">
        <test-method status="PASS" signature="textBeforeClass()[pri:0, instance:FirstClassTest@17c68925]" name="textBeforeClass" is-config="true" duration-ms="22" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeClass -->
        <test-method status="PASS" signature="test2ExactInteger()[pri:0, instance:FirstClassTest@17c68925]" name="test2ExactInteger" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[10]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: 10
at FirstClass.exactInteger(FirstClass.java:11)
at FirstClassTest.test2ExactInteger(FirstClassTest.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2ExactInteger -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textAfterMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="test2TrueOrFalse()[pri:0, instance:FirstClassTest@17c68925]" name="test2TrueOrFalse" duration-ms="3" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2TrueOrFalse -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textAfterMethod" is-config="true" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textAfterMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="test2TypeChanger(int, double, double)[pri:0, instance:FirstClassTest@17c68925]" name="test2TypeChanger" duration-ms="0" started-at="2021-05-14T09:19:30Z" data-provider="data" finished-at="2021-05-14T09:19:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2TypeChanger -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="test2TypeChanger(int, double, double)[pri:0, instance:FirstClassTest@17c68925]" name="test2TypeChanger" duration-ms="0" started-at="2021-05-14T09:19:30Z" data-provider="data" finished-at="2021-05-14T09:19:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2TypeChanger -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textAfterMethod" is-config="true" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="test2TypeChanger(int, double, double)[pri:0, instance:FirstClassTest@17c68925]" name="test2TypeChanger" duration-ms="1" started-at="2021-05-14T09:19:30Z" data-provider="data" finished-at="2021-05-14T09:19:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6.44]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[57.96]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2TypeChanger -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textAfterMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="FAIL" signature="test3Message()[pri:0, instance:FirstClassTest@17c68925]" name="test3Message" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Space is missing expected [Samsung S6] but found [SamsungS6]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Space is missing expected [Samsung S6] but found [SamsungS6]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at FirstClassTest.test3Message(FirstClassTest.java:25)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3Message -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textAfterMethod" is-config="true" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="FAIL" signature="testExactInteger(int, java.lang.String)[pri:0, instance:FirstClassTest@17c68925]" name="testExactInteger" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'parameter_one' is required by @Test on method testExactInteger but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'parameter_one' is required by @Test on method testExactInteger but has not been marked @Optional or defined

at org.testng.internal.Parameters.createParams(Parameters.java:290)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:359)
at org.testng.internal.Parameters.createParameters(Parameters.java:620)
at org.testng.internal.Parameters.handleParameters(Parameters.java:769)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:49)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:37)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:924)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExactInteger -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textBeforeMethod" is-config="true" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="testNameAndAge()[pri:0, instance:FirstClassTest@17c68925]" name="testNameAndAge" duration-ms="9" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNameAndAge -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textAfterMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textAfterMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="testTrueOrFalse()[pri:0, instance:FirstClassTest@17c68925]" name="testTrueOrFalse" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrueOrFalse -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:FirstClassTest@17c68925]" name="textAfterMethod" is-config="true" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="testTypeChanger()[pri:0, instance:FirstClassTest@17c68925]" name="testTypeChanger" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeChanger -->
        <test-method status="PASS" signature="textAfterSuite()[pri:0, instance:FirstClassTest@17c68925]" name="textAfterSuite" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterSuite -->
      </class> <!-- FirstClassTest -->
      <class name="SecondClassTest">
        <test-method status="PASS" signature="textBeforeClass()[pri:0, instance:SecondClassTest@7e0ea639]" name="textBeforeClass" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeClass -->
        <test-method status="PASS" signature="test1NameOfCity()[pri:0, instance:SecondClassTest@7e0ea639]" name="test1NameOfCity" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1NameOfCity -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textAfterMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="test2()[pri:0, instance:SecondClassTest@7e0ea639]" name="test2" duration-ms="3" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textAfterMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="FAIL" signature="test2CountriesCities()[pri:0, instance:SecondClassTest@7e0ea639]" name="test2CountriesCities" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Object arrays are not equal]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Object arrays are not equal
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failAssertNoEqual(Assert.java:989)
at org.testng.Assert.assertEqualsNoOrder(Assert.java:981)
at SecondClassTest.test2CountriesCities(SecondClassTest.java:99)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2CountriesCities -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textBeforeMethod" is-config="true" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textAfterMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="FAIL" signature="test2NullObject()[pri:0, instance:SecondClassTest@7e0ea639]" name="test2NullObject" duration-ms="2" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[String object is not null expected [null] but found [This is my String]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: String object is not null expected [null] but found [This is my String]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotSame(Assert.java:772)
at org.testng.Assert.assertNull(Assert.java:708)
at SecondClassTest.test2NullObject(SecondClassTest.java:22)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2NullObject -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textAfterMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textBeforeMethod" is-config="true" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="FAIL" signature="test2TestWhile()[pri:0, instance:SecondClassTest@7e0ea639]" name="test2TestWhile" duration-ms="1" started-at="2021-05-14T09:19:30Z" description="This test designed to fail" finished-at="2021-05-14T09:19:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at SecondClassTest.test2TestWhile(SecondClassTest.java:38)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2TestWhile -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textAfterMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textAfterMethod" is-config="true" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="testCountriesCities()[pri:0, instance:SecondClassTest@7e0ea639]" name="testCountriesCities" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountriesCities -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="FAIL" signature="testDivision(int)[pri:0, instance:SecondClassTest@7e0ea639]" name="testDivision" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'parameter_three' is required by @Test on method testDivision but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'parameter_three' is required by @Test on method testDivision but has not been marked @Optional or defined

at org.testng.internal.Parameters.createParams(Parameters.java:290)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:359)
at org.testng.internal.Parameters.createParameters(Parameters.java:620)
at org.testng.internal.Parameters.handleParameters(Parameters.java:769)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:49)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:37)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:924)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivision -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textBeforeMethod" is-config="true" duration-ms="2" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="testNullObject()[pri:0, instance:SecondClassTest@7e0ea639]" name="testNullObject" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullObject -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textAfterMethod" is-config="true" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textBeforeMethod" is-config="true" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="testTestSwitch(java.lang.String, java.lang.String)[pri:0, instance:SecondClassTest@7e0ea639]" name="testTestSwitch" duration-ms="0" started-at="2021-05-14T09:19:30Z" data-provider="dataProvider" finished-at="2021-05-14T09:19:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[January]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[It`s winter]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestSwitch -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textAfterMethod" is-config="true" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="testTestSwitch(java.lang.String, java.lang.String)[pri:0, instance:SecondClassTest@7e0ea639]" name="testTestSwitch" duration-ms="0" started-at="2021-05-14T09:19:30Z" data-provider="dataProvider" finished-at="2021-05-14T09:19:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[It`s not winter month]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestSwitch -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textAfterMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="testTestSwitch(java.lang.String, java.lang.String)[pri:0, instance:SecondClassTest@7e0ea639]" name="testTestSwitch" duration-ms="0" started-at="2021-05-14T09:19:30Z" data-provider="dataProvider" finished-at="2021-05-14T09:19:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[February]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[It`s winter]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestSwitch -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textAfterMethod" is-config="true" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="textBeforeMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textBeforeMethod" is-config="true" duration-ms="0" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textBeforeMethod -->
        <test-method status="PASS" signature="testTestWhile()[pri:0, instance:SecondClassTest@7e0ea639]" name="testTestWhile" duration-ms="1" started-at="2021-05-14T09:19:30Z" description="This test designed to pass" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestWhile -->
        <test-method status="PASS" signature="textAfterMethod()[pri:0, instance:SecondClassTest@7e0ea639]" name="textAfterMethod" is-config="true" duration-ms="1" started-at="2021-05-14T09:19:30Z" finished-at="2021-05-14T09:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAfterMethod -->
      </class> <!-- SecondClassTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
