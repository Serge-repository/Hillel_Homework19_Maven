<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-Q5NLETT" ignored="2" tests="22" failures="6" timestamp="14 мая 2021 09:19:30 GMT" time="0.154" errors="0">
  <testcase name="test2ExactInteger" time="0.001" classname="FirstClassTest"/>
  <testcase name="test2TrueOrFalse" time="0.003" classname="FirstClassTest"/>
  <testcase name="test2TypeChanger" time="0.0" classname="FirstClassTest"/>
  <testcase name="test2TypeChanger" time="0.0" classname="FirstClassTest"/>
  <testcase name="test2TypeChanger" time="0.001" classname="FirstClassTest"/>
  <testcase name="test3Message" time="0.001" classname="FirstClassTest">
    <failure type="java.lang.AssertionError" message="Space is missing expected [Samsung S6] but found [SamsungS6]">
      <![CDATA[java.lang.AssertionError: Space is missing expected [Samsung S6] but found [SamsungS6]
at FirstClassTest.test3Message(FirstClassTest.java:25)
... Removed 40 stack frames]]>
    </failure>
  </testcase> <!-- test3Message -->
  <testcase name="testExactInteger" time="0.0" classname="FirstClassTest">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;parameter_one&amp;apos; is required by @Test on method testExactInteger but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'parameter_one' is required by @Test on method testExactInteger but has not been marked @Optional or defined

... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testExactInteger -->
  <testcase name="testNameAndAge" time="0.009" classname="FirstClassTest"/>
  <testcase name="testTrueOrFalse" time="0.0" classname="FirstClassTest"/>
  <testcase name="testTypeChanger" time="0.0" classname="FirstClassTest"/>
  <testcase name="test1NameOfCity" time="0.0" classname="SecondClassTest"/>
  <testcase name="test2" time="0.003" classname="SecondClassTest"/>
  <testcase name="test2CountriesCities" time="0.001" classname="SecondClassTest">
    <failure type="java.lang.AssertionError" message="Object arrays are not equal">
      <![CDATA[java.lang.AssertionError: Object arrays are not equal
at SecondClassTest.test2CountriesCities(SecondClassTest.java:99)
... Removed 38 stack frames]]>
    </failure>
  </testcase> <!-- test2CountriesCities -->
  <testcase name="test2NullObject" time="0.002" classname="SecondClassTest">
    <failure type="java.lang.AssertionError" message="String object is not null expected [null] but found [This is my String]">
      <![CDATA[java.lang.AssertionError: String object is not null expected [null] but found [This is my String]
at SecondClassTest.test2NullObject(SecondClassTest.java:22)
... Removed 38 stack frames]]>
    </failure>
  </testcase> <!-- test2NullObject -->
  <testcase name="test2TestWhile" time="0.001" classname="SecondClassTest">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at SecondClassTest.test2TestWhile(SecondClassTest.java:38)
... Removed 39 stack frames]]>
    </failure>
  </testcase> <!-- test2TestWhile -->
  <testcase name="testCountriesCities" time="0.0" classname="SecondClassTest"/>
  <testcase name="testDivision" time="0.0" classname="SecondClassTest">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;parameter_three&amp;apos; is required by @Test on method testDivision but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'parameter_three' is required by @Test on method testDivision but has not been marked @Optional or defined

... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testDivision -->
  <testcase name="testNullObject" time="0.0" classname="SecondClassTest"/>
  <testcase name="testTestSwitch" time="0.0" classname="SecondClassTest"/>
  <testcase name="testTestSwitch" time="0.0" classname="SecondClassTest"/>
  <testcase name="testTestSwitch" time="0.0" classname="SecondClassTest"/>
  <testcase name="testTestWhile" time="0.001" classname="SecondClassTest"/>
  <testcase name="test2NameAndAge" time="0.0" classname="FirstClassTest">
    <ignored/>
  </testcase> <!-- test2NameAndAge -->
  <testcase name="@AfterSuite textAfterSuite" time="0.0" classname="ParentClass">
    <ignored/>
  </testcase> <!-- @AfterSuite textAfterSuite -->
</testsuite>
